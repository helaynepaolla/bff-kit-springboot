apiVersion: apps/v1
kind: Deployment
metadata:
  name: $KUBERNETES_NAME
  namespace: $KUBERNETES_NAMESPACE
  labels:
    app: $KUBERNETES_NAME
    ambiente: $ENV
    centroDeCusto: $KUBERNETES_CC
    valueStream: $KUBERNETES_VALUE_STREAM
spec:
  selector:
    matchLabels:
      app: $KUBERNETES_NAME
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $KUBERNETES_NAME
        ambiente: $ENV
        centroDeCusto: $KUBERNETES_CC
        valueStream: $KUBERNETES_VALUE_STREAM
    spec:
      containers:
        - name: $KUBERNETES_NAME
          image: $KUBERNETES_IMAGE_NAME
          ports:
            - containerPort: 8088
              protocol: TCP
          imagePullPolicy: Always
          startupProbe:
            httpGet:
              path: /bff-kit-springboot/health/liveness
              port: 8088
            periodSeconds: $KUBERNETES_STARTUP_PROBE_PERIOD_SECONDS
          readinessProbe:
            httpGet:
              path: /bff-kit-springboot/health/readiness
              port: 8088
            initialDelaySeconds: $KUBERNETES_READINESS_PROBE_INITIAL_DELAY_SECONDS
            failureThreshold: $KUBERNETES_READINESS_PROBE_FAILURE_THRESHOLD
            periodSeconds: $KUBERNETES_READINESS_PROBE_PERIOD_SECONDS
          livenessProbe:
            httpGet:
              path: /bff-kit-springboot/health/liveness
              port: 8088
            initialDelaySeconds: $KUBERNETES_LIVENESS_PROBE_INITIAL_DELAY_SECONDS
            failureThreshold: $KUBERNETES_LIVENESS_PROBE_FAILURE_THRESHOLD
            periodSeconds: $KUBERNETES_LIVENESS_PROBE_PERIOD_SECONDS
          resources:
            requests:
              memory: "$KUBERNETES_CONTAINER_REQUEST_MEMORY"
              cpu: "$KUBERNETES_CONTAINER_REQUEST_CPU"
            limits:
              memory: "$KUBERNETES_CONTAINER_LIMIT_MEMORY"
              cpu: "$KUBERNETES_CONTAINER_LIMIT_CPU"
          envFrom:
            - configMapRef:
                name: $KUBERNETES_NAME-configmap
            - secretRef:
                name: $KUBERNETES_NAME-secret
      nodeSelector:
        namespace: $KUBERNETES_NAMESPACE
        restartPolicy: Always
        schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - $KUBERNETES_NAME
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: $KUBERNETES_NAME
  namespace: $KUBERNETES_NAMESPACE
  labels:
    app: $KUBERNETES_NAME
spec:
  ports:
    - name: service
      protocol: TCP
      port: 8080
      targetPort: 8088
  selector:
    app: $KUBERNETES_NAME
  type: ClusterIP